<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	<!--  채용 글목록 -->
<mapper namespace="com.codeone.dao.job.JobDao">
	<select id="job_list" parameterType="Map" resultType="Map">
		select *
		from joblist
		where comdel=0
		<if test="comname != null and comname != ''">
			and comname like concat('%',#{comname},'%')	<!-- %앞: 전위검색, %뒤: 후위검색, %앞뒤: 전체검색 -->				
		</if>
		
		<if test="comcate != null and comcate != ''">
			and comcate like concat('%',#{comcate}, '%')
		</if>
		
		<if test="comjobname != null and comjobname != ''">
			and comjobname like concat('%',#{comjobname}, '%')
		</if>
		
		<if test="comcareer != null and comcareer != ''">
			and comcareer like concat('%',#{comcareer}, '%')
		</if>
		
		<if test="comlocation != null and comlocation != ''">
			and comlocation like concat('%',#{comlocation}, '%')
		</if>		
						
		<if test="comskill != null and comskill != ''">
			and comskill like concat('%',#{comskill}, '%')
		</if>
				
		<if test="comtag != null and comtag != ''">
			and comtag like concat('%',#{comtag}, '%')
		</if>
		order by seq desc
	</select>
	
	<!--  채용 상세보기 -->
	<select id="view" parameterType="Map" resultType="Map">
		select *
			from joblist
		where seq = #{seq}
	</select>
	
	<!--  JobCom 으로 옮김 -->
	<!-- <insert id="insert" parameterType="Map">
		insert into joblist
		(comid,title,content,startline,deadline,wdate,comname,comimage,comcate,
		comjobname,comcareer,comlocation,comskill,comtag,comsalary,comfile,commapx,commapy
		)
		values
		(#{comid},#{title},#{content},#{startline},#{deadline},now(),#{comname},#{comimage},
		#{comcate},#{comjobname},#{comcareer},#{comlocation},#{comskill},#{comtag},#{comsalary},
		#{comfile},#{commapx},#{commapy})
	</insert>
	

	<update id="update" parameterType="Map">
		update joblist set
			comid = #{comid},title = #{title},content = #{content},startline = #{startline},deadline = #{deadline},comname = #{comname},
			comimage = #{comimage},comcate = #{comcate},comjobname = #{comjobname},comcareer = #{comcareer},comlocation = #{comlocation},
			comskill = #{comskill},comtag = #{comtag},comsalary = #{comsalary},comfile = #{comfile},commapx = #{commapx},commapy = #{commapy}
		where seq = #{seq}
	</update>
	
	<update id="delete" parameterType="Map">
		update joblist set
			comdel = 1
		where seq = #{seq}
	</update> -->
	  
	  
	<!--  필터 -->
	<select id="code_list" parameterType="Map" resultType="Map">
		select 
			CODE_SEQ AS value
			, CODE_NAME AS label
			from tn_code
		where GROUP_SEQ = #{group_seq}
	<!-- parent_code_seq가 null이 아니면 parent_code_seq과 일치하는 조건 추가 -->
		<if test="parent_code_seq != null and parent_code_seq != ''">
			and PARENT_CODE_SEQ = #{parent_code_seq}
		
		</if>
	<!-- parent_code_seq가 null이면 CODE_DEPTH가 1인 조건 추가 -->
		<if test="parent_code_seq == null or parent_code_seq == ''">
			and CODE_DEPTH = 1			
		</if>
	</select>
	
		<!-- 좋아요 --> 
	<update id="update_Like" parameterType="Map">
		update joblist set
			liked = (IFNULL(liked, 0) + 1)
		where seq = #{seq}
	</update>	
	
	
	<insert id="insert_like" parameterType="Map">
		insert into joblike
		(joblistseq, memberseq, regdate)
		values
		(#{joblistseq}, #{memberseq}, now())
	</insert>
	
	<update id="update_UnLike" parameterType="Map">
		update joblist set
			liked = (IFNULL(liked, 0) - 1)
		where seq = #{seq}
	</update>
	
	<insert id="delete_Like" parameterType="Map">
		DELETE FROM joblike
		WHERE joblistseq = #{joblistseq}
	</insert>
	
	
</mapper>
