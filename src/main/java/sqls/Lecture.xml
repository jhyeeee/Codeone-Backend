<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.codeone.dao.lecture.LectureDao">

<!-- 강의글 추가 -->
<insert id="writeLecture" parameterType="com.codeone.dto.lecture.LectureDto">

	insert into lecture(id, category, title, content, price, zoomurl, zoompwd, startDate, endDate, filename, newfilename, wdate, updatewdate, likecount, delflg )
	values(#{id}, #{category}, #{title}, #{content}, #{price}, #{zoomurl}, #{zoompwd}, #{startDate}, #{endDate}, #{filename}, #{newfilename}, now(), now(), 0, 0 )

</insert>

<!-- 강의글 수정 -->
<update id="updateLecture" parameterType="com.codeone.dto.lecture.LectureDto">
	update lecture
	set title=#{title}, content=#{content}, category=#{category}, price=#{price}, zoomurl=#{zoomurl}, zoompwd=#{zoompwd},
		filename=#{filename}, newfilename=#{newfilename}, startDate=#{startDate}, endDate=#{endDate}, updatewdate=now()
	where seq=#{seq}
</update>

<!-- 강의글 삭제 -->
<update id="deleteLecture" parameterType="Integer">
	update lecture
	set delflg=1
	where seq=#{seq}
</update>

<!-- 강의목록 -->
<select id="getLectureList" parameterType="com.codeone.dto.lecture.LectureParam" resultType="com.codeone.dto.lecture.LectureDto">
	select *
	from lecture
	where 1=1
	<if test="category != null and category != ''">
		and category=#{category}
	</if>
	<if test="search != null and search != ''">
		and title like concat('%', #{search},'%')
	</if>
	and delflg=0
	order by seq desc
	limit #{start}, #{dataCount}		<!-- 시작위치부터 data보여줄 숫자만큼보여주기 -->
</select>

<!-- 강의 한개 정보 -->
<select id="getLectureOne" parameterType="Integer" resultType="com.codeone.dto.lecture.LectureDto">
	select *
	from lecture
	where seq=#{seq}	
</select>

<!-- 강의글 좋아요 -->
<insert id="likeLecture" parameterType="com.codeone.dto.lecture.LectureLikeDto">
	insert into lecturelike(id, seq, liketime)
	values(#{id}, #{seq}, now())
</insert>

<!-- 좋아요중인지 확인 -->
<select id="checkLike" parameterType="com.codeone.dto.lecture.LectureLikeDto" resultType="Integer">
	select ifnull(count(*), 0)
	from lecturelike
	where id=#{id} and seq=#{seq}
</select>

<!-- 좋아요 취소 -->
<delete id="cancelLike" parameterType="com.codeone.dto.lecture.LectureLikeDto">
	delete from lecturelike
	where id=#{id} and seq=#{seq}
</delete>

<!-- 좋아요 카운트 -->
<update id="countLike" parameterType="Integer">
	update lecture
	set likecount=likecount+1
	where seq=#{seq}
</update>

<!-- 좋아요 취소 카운트 -->
<update id="countCancelLike" parameterType="Integer">
	update lecture
	set likecount=likecount-1
	where seq=#{seq}
</update>

<!-- 좋아요seq리스트 -->
<select id="getlikeList" parameterType="String" resultType="Integer">
	select seq
	from lecturelike
	where id=#{id}
</select>

<!-- 강의목록(좋아요순)-->
<select id="getLectureListOrderByLike" parameterType="com.codeone.dto.lecture.LectureParam" resultType="com.codeone.dto.lecture.LectureDto">
	select *
	from lecture
	where delflg=0
	order by likecount desc
	limit #{start}, #{dataCount}		<!-- 시작위치부터 data보여줄 숫자만큼보여주기 -->
</select>


</mapper>





