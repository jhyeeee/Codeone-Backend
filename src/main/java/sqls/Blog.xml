<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<!-- 인터페이스 위치 -->
<mapper namespace="com.codeone.dao.blog.BlogDao">

<!-- 블로그 작성 -->
	<insert id="writeBlog" parameterType="com.codeone.dto.blog.BlogDto">
		insert into blog( writer, title, content, category1, category2, regdate, likes, tag, delf, thumbnail)
		values( #{writer}, #{title}, #{content}, #{category1}, #{category2},now(),#{likes},#{tag}, 0, #{thumbnail})
	</insert>
	
<!-- 모든 블로그 검색  -->	
	<select id="getAllBlogs" resultType="com.codeone.dto.blog.BlogDto">	
		select B.seq, 
			   U.id AS 'writer', 
			   B.title, 
			   B.content, 
			   B.category1, 
			   B.category2,
			   B.regdate,
			   B.thumbnail,
			   B.likes,
			   B.tag,
			   B.delf,
			   Count(R.writer) AS 'replies'
		from blog B
		LEFT OUTER JOIN blogreply R
			ON B.seq = R.blogSeq
		LEFT OUTER JOIN user U
			ON B.writer = U.email		
		where delf != 1
		group by B.seq
	</select>
	
		
<!-- 블로그 검색  -->	
	<select id="getBlog" parameterType="Integer" resultType="com.codeone.dto.blog.BlogDto">
		select * from blog
		where
			seq = #{seq}		
	</select>
	
<!-- 블로그 삭제 -->
<update id="deleteBlog" parameterType="Integer">
	update blog
	set delf=1
	where seq=#{seq}
</update>

<!-- 블로그 업데이트  -->
	<update id="updateBlog" parameterType="com.codeone.dto.blog.BlogDto">
		update blog
		set title=#{title}, content=#{content}, writer=#{writer}, thumbnail=#{thumbnail} , renewdate= now()
		where seq=#{seq}
		
	</update>

<!-- 블로그 좋아요 업데이트  -->
	<update id="updateBlogLikes" parameterType="Integer">
		update blog
		set likes = likes + 1
		where seq=#{seq}
		
	</update>
	
<!-- 블로그 좋아요 취소  -->
	<update id="deleteBlogLikes" parameterType="Integer">
		update blog
		set likes = likes - 1
		where seq=#{seq}
		
	</update>
	
	<!-- 블로그 검색 결과 -->
	<select id="getSearchBlogs"  parameterType="String" resultType="com.codeone.dto.blog.BlogDto" >
		select B.seq, 
			   U.id AS 'writer', 
			   B.title, 
			   B.content, 
			   B.category1, 
			   B.category2,
			   B.regdate,
			   B.thumbnail,
			   B.likes,
			   B.tag,
			   B.delf,
			   Count(R.writer) AS 'replies'
		from blog B
		LEFT OUTER JOIN blogreply R
			ON B.seq = R.blogSeq
		LEFT OUTER JOIN user U
			ON B.writer = U.email
		where B.title like concat('%', #{searchTerm},'%') and delf != 1
		group by B.seq
		<!-- <if test="choice != null and choice != '' and search != null and search != '' ">
			<if test="choice == 'title'">
				where title like concat('%', #{search},'%')
			</if>
			<if test="choice == 'content'">
				where content like concat('%', #{search},'%')
			</if>
			<if test="choice == 'writer'">
				where id=#{search}
			</if>			  	
		</if> -->	
	</select>
	
<!-- 블로그 카테고리   -->
	<select id="getBlogCategory" parameterType="com.codeone.dto.blog.BlogCategoryParam" resultType="com.codeone.dto.blog.BlogCategoryDto">
		select * 
		<if test="catetype == 1">
			from category1
		</if>
		<if test="catetype == 2 and cate1seq != 0">
			from category2
			where
				cate1seq = #{cate1seq}
		</if>				
	</select>
	

</mapper>